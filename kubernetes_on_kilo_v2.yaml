heat_template_version: 2015-04-30

description: '''
  Boot a Kubernetes cluster with a single master and one or more nodes (as specified)
  OpenStack Powered Cloud.'''

parameters:

  flavor:
    description: Flavor used for instances
    label: Flavor
    type: string
    hidden: false
    constraints:
    - custom_constraint: nova.flavor
    description: Valid flavors only

  image:
    description: Image that will be used for the nodes.
    label: Image
    type: string
    hidden: false
    constraints: 
    - custom_constraint: glance.image
    description: Must be a valid Glance image

  k8s_node_count:
    description: Number of machines to deploy as a Kubernetes Minion
    label: Kubernetes Minion Count
    type: number
    default: 3
    hidden: false
    constraints:
    - range:
        min: 1
        max: 6
      description: Must be between 2 and 6 machines.

  ext_network:
    description: See Routers tab for name of the External Network
    type: string
    label: External Network
    default: VLAN3337
    hidden: false

  keyname:
    description: Name of keypair to be used for instance
    label: Key Pair
    type: string
    default: dtnode_key
    hidden: false
    constraints: 
    - custom_constraint: nova.keypair
    description: Must be a known keypair

  network_resource:
    description: WestGrid project network
    label: Network
    type: string
    default: jwe-314_network
    hidden: false
    constraints:
    - custom_constraint: neutron.network
    description: Must be a valid Neutron Network.

  docker_volume_size:
    type: number
    description: size of a cinder volume to allocate to docker for container/image storage
    default: 1

resources:
  ########################################
  ##  Policies, Alarm, Groups and IPs
  ########################################
  scale_up_policy:
    depends_on:
      - k8s_nodes
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: k8s_nodes }
      cooldown: 120
      scaling_adjustment: 1

  scale_down_policy:
    depends_on:
      - k8s_nodes
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: k8s_nodes }
      cooldown: 60
      scaling_adjustment: -1

  server_group:
    type: OS::Nova::ServerGroup
    properties:
      name: nova-server-group

  kube_master_floating:
    type: OS::Nova::FloatingIP
    properties:
      pool: {get_param: ext_network}

  kube_master_floating_association:
    type: OS::Nova::FloatingIPAssociation
    depends_on:
      - k8s_master
    properties:
      floating_ip: {get_resource: kube_master_floating}
      server_id: {get_resource: k8s_master}

  remote_ssh_access:
     type: OS::Neutron::SecurityGroup
     properties:
       name: remote_ssh_access
       rules:
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 22
           port_range_max: 22

  ########################################
  ##  Servers
  ########################################
  k8s_master:
    type: OS::Nova::Server
    properties:
      name: k8s_master
      image:    { get_param: image   }
      flavor:   { get_param: flavor  }
      key_name: { get_param: keyname }
      networks: 
      - network: { get_param: network_resource }
      scheduler_hints: { group: { get_resource: server_group } }
      security_groups: 
      - default
      - get_resource: remote_ssh_access
      metadata: 
        kube_group: k8scluster,vault,nofloating

  k8s_nodes:
    type: OS::Heat::AutoScalingGroup
    depends_on:
      - k8s_master
    properties:
      min_size: 1
      desired_capacity: { get_param: k8s_node_count }
      max_size: 6
      resource:
        type: OS::Nova::Server
        properties:
          image:    { get_param: image   }
          flavor:   { get_param: flavor  }
          key_name: { get_param: keyname }
          networks: 
          - network: { get_param: network_resource }
          scheduler_hints: { group: { get_resource: server_group } }
          metadata: 
            kube_group: k8snode,k8scluster,nofloating

outputs:
  ssh_key_name:
    description: >
      Use this ssh in the command line script to log in to the Kubernetes master via ssh (ssh -i .ssh/<ssh_key_name>.pem fedora@<kube_masterip>).
      Get the keypair .pem file from 'Access & Security' and place in the .ssh folder on your computer.
    value: {get_param: keyname}

  kube_masterip:
    description: >
      This is the public ip address of the Kubernetes master server.
      Use this address to log in to the Kubernetes master via ssh. 
    value: {get_attr: [kube_master_floating, ip]}

  dashboard_links:
    description: > 
      Links for the various dashboards are as follows:
    value: "Pending"

  scale_up_url:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scale_up_policy, alarm_url]}

  scale_dn_url:
    description: >
      This URL is the webhook to scale down the autoscaling group.
      You can invoke the scale-down operation by doing an HTTP POST to
      this URL; no body nor extra headers are needed.
    value: {get_attr: [scale_down_policy, alarm_url]}