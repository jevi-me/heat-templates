heat_template_version: 2015-04-30

description: '''
  Boot a Kubernetes cluster with a single master and one or more nodes (as specified)
  OpenStack Powered Cloud.'''

parameters:

  flavor:
    description: Flavor used for instances
    label: Flavor
    type: string
    default: 2cb70964-721d-47ff-badb-b702898b6fc2
    hidden: false
    constraints:
    - custom_constraint: nova.flavor
    description: Valid flavors only

  image:
    description: Image that will be used for the nodes.
    label: Image
    type: string
    default: 2cd245b5-9290-45d6-87fe-69c0b837659f
    hidden: false
    constraints: 
    - custom_constraint: glance.image
    description: Must be a valid Glance image

  k8s_node_count:
    description: Number of machines to deploy as a Kubernetes Minion
    label: Kubernetes Minion Count
    type: number
    default: 1
    hidden: false
    constraints:
    - range:
        min: 1
        max: 6
      description: Must be between 2 and 6 machines.

  ext_network:
    description: See Routers tab for name of the External Network
    type: string
    label: External Network
    default: VLAN3337
    hidden: false

  keyname:
    description: Name of keypair to be used for instance
    label: Key Pair
    type: string
    default: dtnode_key
    hidden: false
    constraints: 
    - custom_constraint: nova.keypair
    description: Must be a known keypair

  network_resource:
    description: WestGrid project network
    label: Network
    type: string
    default: a7741f95-0bc1-4424-86ef-2e8f66bcae18
    hidden: false
    constraints:
    - custom_constraint: neutron.network
    description: Must be a valid Neutron Network.

  docker_volume_size:
    type: number
    description: size of a cinder volume to allocate to docker for container/image storage
    default: 1

resources:
  ########################################
  ##  Policies, Alarm, Groups and IPs
  ########################################
  scale_up_policy:
    depends_on:
      - k8s_nodes
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: k8s_nodes }
      cooldown: 120
      scaling_adjustment: 1

  scale_down_policy:
    depends_on:
      - k8s_nodes
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: k8s_nodes }
      cooldown: 60
      scaling_adjustment: -1

  server_group:
    type: OS::Nova::ServerGroup
    properties:
      name: nova-server-group

  kube_master_floating:
    type: OS::Nova::FloatingIP
    properties:
      pool: {get_param: ext_network}

  kube_master_floating_association:
    type: OS::Nova::FloatingIPAssociation
    depends_on:
      - k8s_master
    properties:
      floating_ip: {get_resource: kube_master_floating}
      server_id: {get_resource: k8s_master}

  remote_ssh_access:
     type: OS::Neutron::SecurityGroup
     properties:
       name: remote_ssh_access
       rules:
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 22
           port_range_max: 22
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 10250
           port_range_max: 10255
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 2379
           port_range_max: 2380
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 6443
           port_range_max: 6443
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 30000
           port_range_max: 32767
         - remote_ip_prefix: 0.0.0.0/0
           protocol: tcp
           port_range_min: 1
           port_range_max: 65535
         - remote_ip_prefix: 0.0.0.0/0
           protocol: udp
           port_range_min: 1
           port_range_max: 65535
         - remote_ip_prefix: 0.0.0.0/0
           protocol: icmp

  ########################################
  ##  Software Config Parts (Master)
  ########################################

  centos_config:
    type: OS::Heat::SoftwareConfig        
    properties:
      group: ungrouped
      config: |
        #!/bin/sh
        #yum update -y
        systemctl disable firewalld
        sed -i 's/SELINUX=.*/SELINUX=disabled/' /etc/selinux/config
        yum remove chrony -y
        yum install ntp -y
        systemctl enable ntpd.service
        systemctl start ntpd.service
        masterip=$(ip addr show eth0 | awk '$1 == "inet" {print $2}' | cut -f1 -d/)
        cat <<EOF >> /etc/hosts
        $masterip    k8s-master.westcloud
        $masterip    k8s-master
        EOF
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/kubernetes-client-1.1.0-0.4.git2bfa9a1.el7.x86_64.rpm -y
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/kubernetes-master-1.1.0-0.4.git2bfa9a1.el7.x86_64.rpm -y 
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/kubernetes-node-1.1.0-0.4.git2bfa9a1.el7.x86_64.rpm -y 
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/kubernetes-1.1.0-0.4.git2bfa9a1.el7.x86_64.rpm -y
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/etcd-2.0.9-1.el7.x86_64.rpm -y
        yum install https://cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/Packages/flannel-0.2.0-7.el7.x86_64.rpm -y
        echo ">> Package Installation Complete."
        cat <<EOF > /etc/kubernetes/config
        KUBE_LOGTOSTDERR="--logtostderr=true"
        KUBE_LOG_LEVEL="--v=0"
        KUBE_ALLOW_PRIV="--allow-privileged=false"
        KUBE_MASTER="--master=http://k8s-master:8080"
        EOF
        cat <<EOF > /etc/etcd/etcd.config
        ETCD_NAME=defaultETCD_DATA_DIR="/var/lib/etcd/default.etcd"
        ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:2379"
        ETCD_ADVERTISE_CLIENT_URLS="http://0.0.0.0:2379"
        EOF
        cat <<EOF > /etc/kubernetes/apiserver
        KUBE_API_ADDRESS="--address=0.0.0.0"
        KUBE_API_PORT="--port=8080"
        KUBELET_PORT="--kubelet-port=10250"
        KUBE_ETCD_SERVERS="--etcd-servers=http://k8s-master:2379"
        KUBE_SERVICE_ADDRESSES="--service-cluster-ip-range=10.254.0.0/16"
        KUBE_API_ARGS=""
        EOF
        cat <<EOF > /etc/sysconfig/flanneld
        FLANNEL_ETCD_ENDPOINTS="http://k8s-master:2379"
        FLANNEL_ETCD_PREFIX="/kube-centos/network"
        EOF
        cat <<EOF > /etc/kubernetes/kubelet
        KUBELET_ADDRESS="--address=0.0.0.0"
        KUBELET_PORT="--port=10250"
        KUBELET_HOSTNAME=""
        KUBELET_API_SERVER="--api-servers=http://k8s-master:8080"
        KUBELET_ARGS=""
        EOF
        echo ">> File Configurations Complete"
        systemctl enable --now etcd
        etcdctl mkdir /kube-centos/network
        etcdctl mk /kube-centos/network/config "{ \"Network\": \"172.30.30.0/12\", \"Subnetlen\": 24, \"Backend\": { \"Type\": \"vxlan\" }"
        systemctl daemon-reload
        systemctl restart etcd 
        systemctl enable etcd kube-apiserver kube-controller-manager kube-scheduler kube-proxy docker kubelet flanneld docker
        systemctl start etcd kube-apiserver kube-controller-manager kube-scheduler kube-proxy docker kubelet flanneld docker
        kubectl config set-cluster default-cluster --server=http://k8s-master:8080
        kubectl config set-context default-context --cluster=default-cluster --user=default-admin
        kubectl config use-context default-context
        kubectl get nodes
        echo ">> Services Started"

  ### INIT BUILD
  kube_master_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: centos_config}

  ########################################
  ##  Servers
  ########################################
  k8s_master:
    type: OS::Nova::Server
    properties:
      name: k8s_master
      image:    { get_param: image   }
      flavor:   { get_param: flavor  }
      key_name: { get_param: keyname }
      networks: 
      - network: { get_param: network_resource }
      scheduler_hints: { group: { get_resource: server_group } }
      security_groups: 
      - default
      - get_resource: remote_ssh_access
      metadata: 
        kube_group: k8scluster,vault,nofloating
      user_data_format: RAW
      user_data: {get_resource: kube_master_init}

  k8s_nodes:
    type: OS::Heat::AutoScalingGroup
    depends_on:
      - k8s_master
    properties:
      min_size: 1
      desired_capacity: { get_param: k8s_node_count }
      max_size: 6
      resource:
        type: OS::Nova::Server
        properties:
          image:    { get_param: image   }
          flavor:   { get_param: flavor  }
          key_name: { get_param: keyname }
          networks: 
          - network: { get_param: network_resource }
          scheduler_hints: { group: { get_resource: server_group } }
          metadata: 
            kube_group: k8snode,k8scluster,nofloating
          # user_data_format: RAW
          # user_data:
          #   str_replace:
          #     template: |
          #       #cloud-config
          #       system_info:
          #         users:
          #           - default
          #           - name: minion
          #             gecos: Kubernetes Interactive User
          #             groups: [wheel, adm, systemd-journal]
          #             lock_passwd: true
          #             sudo: ["ALL=(ALL) NOPASSWD:ALL"]
          #             shell: /bin/bash
          #       packages:
          #         - python
          #         - kubernetes-node
          #         - flannel
          #       bootcmd:
          #         - setenforce 0 
          #         - sed -i 's/SELINUX=.*/SELINUX=permissive/' /etc/selinux/config
          #       runcmd:
          #         - sudo su -
          #         - sed -i "s/KUBE_MASTER=.*/KUBE_MASTER=\"--master=http:\/\/%masterip%:8080\"/" /etc/kubernetes/config 
          #         - sed -i "s/KUBE_API_SERVER=.*/KUBE_API_SERVER=\"--api-servers=http:\/\/%masterip%:8080\"/" /etc/kubernetes/kubelet 
          #         - sed -i 's/KUBELET_ADDRESS=.*/KUBELET_ADDRESS=\"--address=0.0.0.0\"/' /etc/kubernetes/kubelet 
          #         - sed -i 's/KUBELET_HOSTNAME=.*/KUBELET_HOSTNAME=\"\"/' /etc/kubernetes/kubelet 
          #         - sed -i "s/FLANNEL_ETCD=.*/FLANNEL_ETCD="http:\/\/%masterip%:2379\"/" /etc/sysconfig/flanneld
          #         - sed -i 's/ServiceAccount,//' /etc/kubernetes/apiserver
          #         - systemctl daemon-reload && systemctl enable --now kubelet docker kube-proxy && systemctl status kubelet docker kube-proxy
          #         - systemctl daemon-reload && systemctl enable --now flanneld && systemctl status flanneld
          #         - kubectl get all --all-namespaces=true
          #       final_message: "The system is up, after $UPTIME seconds. Master Node is @ %masterip%"
          #     params:
          #       "%masterip%": {get_attr: [kube_master_floating, ip]}

outputs:
  ssh_key_name:
    description: >
      Use this ssh in the command line script to log in to the Kubernetes master via ssh (ssh -i .ssh/<ssh_key_name>.pem fedora@<kube_masterip>).
      Get the keypair .pem file from 'Access & Security' and place in the .ssh folder on your computer.
    value: {get_param: keyname}

  kube_masterip:
    description: >
      This is the public ip address of the Kubernetes master server.
      Use this address to log in to the Kubernetes master via ssh. 
    value: {get_attr: [kube_master_floating, ip]}

  dashboard_links:
    description: > 
      Links for the various dashboards are as follows:
    value: "Pending"

  scale_up_url:
    description: >
      This URL is the webhook to scale up the autoscaling group.  You
      can invoke the scale-up operation by doing an HTTP POST to this
      URL; no body nor extra headers are needed.
    value: {get_attr: [scale_up_policy, alarm_url]}

  scale_dn_url:
    description: >
      This URL is the webhook to scale down the autoscaling group.
      You can invoke the scale-down operation by doing an HTTP POST to
      this URL; no body nor extra headers are needed.
    value: {get_attr: [scale_down_policy, alarm_url]}