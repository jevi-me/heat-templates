heat_template_version: 2015-04-30

description: >
  Deploy Kubernetes on a CoreOS cluster that operates on an
  OpenStack Powered Cloud.

parameters:
  flavor:
    description: Flavor used for instances
    label: Flavor
    type: string
    default: p2-3gb
    hidden: false
    constraints:
    - custom_constraint: nova.flavor
    description: Valid flavors only

  image:
    description: Image that will be used for the nodes.
    label: Image
    type: string
    hidden: false
    constraints: 
    - custom_constraint: glance.image
    description: Must be a valid Glance image

  kubernetes_minion_count:
    description: Number of machines to deploy as a Kubernetes Minion
    label: Kubernetes Minion Count
    type: number
    default: 3
    hidden: false
    constraints:
    - range:
        min: 1
        max: 6
      description: Must be between 2 and 6 machines.

  keyname:
    description: Name of keypair to be used for instance
    label: Key Pair
    type: string
    default: JeviKey  #TODO UPDATE THIS
    hidden: false
    constraints: 
    - custom_constraint: nova.keypair
    description: Must be a known keypair

  timeout:
    description: Wait condition timeout seconds
    label: Timeout (seconds)
    type: number
    default: 600
    hidden: false

  network_resource:
    description: WestGrid project network
    label: Network
    type: string
    hidden: false
    constraints:
    - custom_constraint: neutron.network
    description: Must be a valid Neutron Network.

resources:
  discovery_node:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keyname }
      image:    { get_param: image   }
      flavor:   { get_param: flavor  }
      name: discovery_node
      networks: 
      - network: {get_param: network_resource}
      scheduler_hints: { group: { get_resource: policy_group }}

  kubernetes_master_node:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keyname }
      image:    { get_param: image   }
      flavor:   { get_param: flavor  }
      name: kubernetes_master
      networks: 
      - network: {get_param: network_resource}
      scheduler_hints: { group: { get_resource: policy_group }}

  overlord_node:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keyname }
      image:    { get_param: image   }
      flavor:   { get_param: flavor  }
      name: kubernetes_master
      networks: 
      - network: {get_param: network_resource}
      scheduler_hints: { group: { get_resource: policy_group }}

  kubernetes_minions: 
    type: OS::Heat::AutoScalingGroup
    properties:
      min_size: 1
      desired_capacity: { get_param: kubernetes_minion_count }
      max_size: 6
      resource:
        type: OS::Nova::Server
        properties:
          key_name: { get_param: keyname }
          image:    { get_param: image   }
          flavor:   { get_param: flavor  }
          name: kubernetes_minion
          networks: 
          - network: {get_param: network_resource}
          scheduler_hints: { group: { get_resource: policy_group }}

  policy_group:
    type: OS::Nova::ServerGroup
    properties:
      name: nova-server-group
      policies: [affinity]

  scale_up_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: kubernetes_minions }
      cooldown: 60
      scaling_adjustment: 1

  scale_down_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: { get_resource: kubernetes_minions }
      cooldown: 60
      scaling_adjustment: '-1'